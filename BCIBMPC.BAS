1  GOTO  1000: REM BASICODE-3 version 2.6, (C) 1989, H. Vosman
2  REM EGA / VGA-Color revision and German version: 050992 A.Garten
3  REM completion of 3C support, printer redirection option,
4  REM and modernization of the time delay: 30457, K.Schenk
5  REM For printer redirection please set OPRN in line 43 to 1;
6  REM Please start REM in future with the option / f: 9
7  REM Disclaimer: This program is for non-commercial purposes and
8  REM no liability is assumed! 
9  REM translated to English by fralaz1971 on 2021-03-22
10 REM
20 KEY OFF: CLEAR : OPTION  BASE 0: SCREEN 0: CLS : COLOR 7, 0, 0
21 ODUMMY% = 3: OCH% = 0: DIM OPT%(108): FR = 0: GOSUB 280
22 OGRP = 9:               REM EGA mode for graphics mode
23 OGH% = 639: OGV% = 349: REM limits for graphic display (EGA)
24 OTH% = 80: OTV% = 43:   REM limits for text in graphics mode
25 OHT% = 80: OVT% = 24:   REM limits for text in text mode
26 OTIME = 120 * 100: REM time correction value (here: IBM 386 AT (25 MHz)) 
27 DIM CC(1): CC(0) = 7: CC(1) = 0: REM Standard color setting 
28 WIDTH OHT%: LOCATE 1, 1, 0: ON ERROR GOTO  975
29 HG = OGH% + 1: VG = OGV% + 1: HO = OHT% - 1: VE = OVT% - 1: CT = 0: CN = 0: SR = 0: SR$ = "": IN$ = " ": SV = 7
30 OX$ = TIME$: RANDOMIZE (VAL(LEFT$(OX$, 2)) + VAL(MID$(OX$, 4, 2)) + VAL(RIGHT$(OX$, 2)))
31 REM Character table for text in graphics mode
32 O$(0) = "14EB4890562E736F616D2C6E28202943202C393138388B5506EC"
33 O$(1) = "5756B81E358821CDFB8B00E85E00EE83B924000875A6E205EBFB"
34 O$(2) = "9009A6BB8EFFBBC3000E8B1F0C760C8B768B8B0A8B140876048B"
35 O$(3) = "0CB4768B53061C8BE3D1E3D1E3D1F38B035BBFF300088A26B71C"
36 O$(4) = "4601FB840E7457565350525110CD595A585B5E5F804980FF0474"
37 O$(5) = "E7D0E4EBC1834208754F5FD7075EE58BCA5D0008000000000000"
38 OCH% = 0: FOR OC1% = 0 TO 5: FOR OC2% = 0 TO 12
39 OPT%(OCH%) = VAL("&H" + MID$(O$(OC1%), (OC2% * 4) + 1, 4))
40 OCH% = OCH% + 1: NEXT: NEXT: ERASE O$
41 KEY 1, CHR$(186): KEY 2, CHR$(187): KEY 3, CHR$(188): KEY 4, CHR$(189): KEY 5, CHR$(190)
42 KEY 6, CHR$(191): KEY 7, CHR$(192): KEY 8, CHR$(193): KEY 9, CHR$(194): KEY 10, CHR$(195)
43 OPRN = 0: REM setting for printer redirection 
46 IF OPRN = 1 THEN OPEN "Printer.txt" FOR OUTPUT AS 9
49 GOTO 1010
60 REM  Change color palette for foreground colors
61 PALETTE 2, 4: PALETTE 3, 5: PALETTE 4, 2: PALETTE 5, 3
62 PALETTE 6, 14: PALETTE 8, 0: RETURN
100 SCREEN 0: GOSUB 60: WIDTH OHT%: COLOR CC(0), CC(1): CLS : LOCATE , , 0: RETURN
110 OVE% = INT(VE) + 1: OHO% = INT(HO) + 1
111 IF OVE% > OVT% THEN  OVE% = OVT% ELSE IF OVE% < 1 THEN  OVE% = 1
112 IF OHO% > OHT% THEN  OHO% = OHT% ELSE IF OHO% < 1 THEN  OHO% = 1
113 COLOR CC(0), CC(1): LOCATE OVE%, OHO%, 0: RETURN
120 HO = POS(HO) - 1: VE = CSRLIN - 1: RETURN
150 PRINT  " "; : COLOR CC(1), CC(0), 0: PRINT  "  "; SR$; "  ";
151 COLOR CC(0), CC(1), 0: PRINT  " "; : RETURN
200 IN$ = INKEY$: IF IN$ <> "" GOTO  212 ELSE IN = 0: RETURN
210 LOCATE , , 1: REM Cursor einschalten
211 IN$ = INKEY$: IF IN$ = "" GOTO  211 ELSE LOCATE , , 0
212 OFIN% = ASC(RIGHT$(IN$, 1)): IN$ = LEFT$(IN$, 1): IN = ASC(IN$)
213 CN = 0: IF IN > 64 AND IN < 91 THEN  CN = IN + 32: IF IN > 96 AND IN < 123 THEN  CN = IN - 32
214 IF IN > 185 AND IN < 196 THEN  IN = (IN - 185) * -1: RETURN
215 IF (IN > 31) AND (IN < 96) THEN  RETURN ELSE IF (IN > 95) AND (IN < 128) THEN  IN = IN - 32: RETURN
216 IF (IN=8)GOTO  225:RETURN ELSE IF (IN=13)THEN  RETURN
217 IF (IN <> 0) THEN  IN = -IN: IN$ = CHR$(2): RETURN
218 IF (OFIN% = 72) THEN  IN = 31 ELSE IF (OFIN% = 75) THEN  IN = 28 ELSE IF (OFIN% = 77) THEN  IN = 29 ELSE IF (OFIN% = 80) THEN  IN = 30 ELSE IF (OFIN% = 83) OR (OFIN% = 8) GOTO  225 ELSE IN = -OFIN% - 256
219 IN$ = CHR$(1): RETURN
220 OVE% = INT(VE) + 1: OHO% = INT(HO) + 1
221 IF ((OHO% < 1) OR (OHO% > OHT%)) OR ((OVE% < 1) OR (OVE% > OVT%)) THEN  IN = 0: RETURN
222 IN = SCREEN(OVE%, OHO%): IF (IN < 32) OR (IN > 127) THEN  IN = 0: RETURN ELSE OFIN% = 1: GOTO  214
225 IN = 127: OFIN% = POS(0)
226 IF OFIN% = 1 THEN  IN$ = "": RETURN ELSE IN$ = CHR$(29) + " " + CHR$(29)
227 IF OFIN% = OHT% THEN  IN$ = CHR$(29) + IN$
228 IF OFIN% = OHT% - 1 THEN  IN$ = CHR$(29) + CHR$(29) + IN$
229 RETURN
250 BEEP: RETURN
260 RV = RND(1): RETURN
270 FR = FRE(""): RETURN
280 REM STOP-Tasten-Behandlung
281 IF FR = 1 THEN  KEY 15, CHR$(4) + CHR$(70): ON  KEY(15) GOSUB 283: KEY(15) ON  ELSE KEY(15) OFF
282 RETURN
283 RETURN: REM Dummy-Routine fuer STOP-Taste (= Control-Break)
300 SR$ = MID$(STR$(ABS(SR)), 2): IF LEFT$(SR$, 1) = "." THEN  SR$ = "0" + SR$
301 IF SR < 0 THEN  SR$ = "-" + SR$
302 RETURN
310 SR$ = "": IF CT <= 0 THEN  RETURN ELSE OS# = CDBL(ABS(SR))
311 IF CN <= 0 THEN  OI# = INT(OS# + .5): OF# = 0: GOTO  313 ELSE OI# = INT(OS# + .5 * 10 ^ -CN): OF# = INT(((OS# - OI#) * 10 ^ CN) + .5)
312 OFIP# = OF#: GOSUB 316: IF OX$ = "" GOTO  315 ELSE SR$ = "." + STRING$(CN - LEN(OX$), 48) + OX$
313 OFIP# = OI#: GOSUB 316: IF OX$ = "" GOTO  315 ELSE SR$ = OX$ + SR$: IF (SGN(SR) < 0) AND (NOT ((OI# = 0) AND (OF# = 0))) THEN  SR$ = "-" + SR$
314 IF LEN(SR$) <= CT THEN  SR$ = STRING$(CT - LEN(SR$), 32) + SR$: RETURN
315 SR$ = STRING$(CT, 42): RETURN
316 IF OFIP# > 10 ^ 16 THEN  OX$ = "": RETURN ELSE OX$ = MID$(STR$(OFIP#), 2): RETURN
330 OI1% = LEN(SR$): OX$ = "": FOR  OI2% = 1 TO  OI1%: OI3% = ASC(MID$(SR$, OI2%, 1))
331 IF (OI3% > 95) AND (OI3% < 128) THEN  OI3% = OI3% - 32
332 OX$ = OX$ + CHR$(OI3%): NEXT: SR$ = OX$: RETURN
350 IF OPRN = 0 THEN  LPRINT  SR$; : RETURN
355 IF OPRN = 1 THEN  PRINT  #9, SR$; : RETURN
360 IF OPRN = 0 THEN  LPRINT  : RETURN
365 IF OPRN = 1 THEN  PRINT  #9, "": RETURN
400 OSD = 1.82 * SD: IF OSD < .023 THEN  OSD = .023
401 IF SV = 0 GOTO  404
402 IF SP < 26 THEN  OSP = 26 ELSE IF SP > 127 THEN  OSP = 127 ELSE OSP = SP
403 PLAY "MF": SOUND EXP(OSP * .057762 + 2.10125), OSD: RETURN
404 PLAY "MF": SOUND 32767, OSD: RETURN
450 OTIME = TIMER
451 OMO = .1 * SD: SD = 0: IN = 0: LOCATE , , 1: REM Switch on cursor
452 IN$ = INKEY$
453 IF TIMER > OMO + OTIME THEN  GOTO  456
454 IF IN$ <> "" AND SV <> 0 THEN  SD = TIMER - OTIME: GOTO  456
455 GOTO  452
456 LOCATE , , 0: IF SD = 0 THEN  IN$ = "": RETURN ELSE GOTO  212
500 GOSUB 510: IF (ON F% < 1) OR (ON F% > 8) THEN  IN = -1: GOSUB 250: RETURN
501 IF NF$ = "" THEN  ERROR 250: REM Test, ob Dateiname fehlt
502 IN = 0: CLOSE ON F%: IF (ON F% MOD 2) = 0 GOTO  505
504 OPEN "I", ON F%, NF$: RETURN: REM Open file for input
505 OPEN "O", ON F%, NF$: RETURN: REM Open file for output
510 ON F% = CINT(NF) + 1: RETURN
540 REM Read in data
541 GOSUB 510: IN = 0: IN$ = "": IF EOF(ON F%) THEN IN = 1: RETURN
542 LINE INPUT #ON F%, IN$: IF EOF(ON F%) THEN  IN = 1
543 RETURN
560 REM Output data
562 GOSUB 510: IN = 0: PRINT  #ON F%, SR$; CHR$(13);
563 RETURN
580 GOSUB 510: IF (ON F% < 1) OR (ON F% > 8) THEN  IN = -1: GOSUB 250: RETURN
581 IN = 0: CLOSE ON F%: RETURN
600 SCREEN OGRP: GOSUB 60: GOSUB 605: CLS : RETURN
605 OCCV = CC(0): IF OCCV = 0 THEN  OCCV = 8: REM color 0,... forbidden
606 OCCH = CC(1)
607 IF OCCH = 2 THEN  OCCH = 4: GOTO  611: REM Correct background colors
608 IF OCCH = 3 THEN  OCCH = 5: GOTO  611
609 IF OCCH = 4 THEN  OCCH = 2: GOTO  611
610 IF OCCH = 5 THEN  OCCH = 3
611 COLOR OCCV, OCCH: RETURN
612 IF HO < 0 THEN  OHOR% = 0 ELSE IF HO >= 1 THEN  OHOR% = OGH% ELSE OHOR% = CINT(OGH% * HO)
613 IF VE < 0 THEN  OVER% = 0 ELSE IF VE >= 1 THEN  OVER% = OGV% ELSE OVER% = CINT(OGV% * VE)
614 RETURN
620 GOSUB 605: GOSUB 612: IF CN = 1 THEN  PRESET (OHOR%, OVER%) ELSE PSET (OHOR%, OVER%)
621 RETURN
630 GOSUB 605: GOSUB 612: IF CN = 1 THEN  LINE -(OHOR%, OVER%), 0 ELSE LINE -(OHOR%, OVER%)
631 RETURN
650 REM Textausgabe im Grafik-Modus
651 GOSUB 605: GOSUB 612: OHO% = OHOR% + 7: OVE% = OVER%
652 OI1% = LEN(SR$): IF CN = 0 THEN  OI3% = OCCV ELSE OI3% = OCCH
653 FOR  OI2% = 1 TO  OI1%: OCH% = ASC(MID$(SR$, OI2%, 1))
654 IF OHO% > OGH% THEN  OVE% = OVE% + 8: OHO% = 7
655 IF OVE% > (OGV% - 7) THEN  OVE% = OGV% - 7
656 ODUMMY%=VARPTR(OPT%(0)):CALL ODUMMY%(OHO%,OVE%,OI3%,OCH%):OHO%=OHO%+8
657 NEXT
658 ODUMMY% = POINT(OHOR%, OVER%): PSET (OHOR%, OVER%), ODUMMY%
659 RETURN
950 IF OPRN = 1 THEN CLOSE 9
951 GOSUB 956: ON ERROR GOTO 0: END
956 FR = 0: GOSUB 280: SCREEN 0, 0, 0: WIDTH 80: LOCATE , , 1: COLOR 7, 0, 0: KEY OFF: CLS : RETURN
975 OHO% = POS(0): OVE% = CSRLIN: LOCATE 25, 1
976 IF ERR = 24 THEN PRINT "Input or output device does not answer!"; : BEEP: GOTO 995
977 IF ERR = 27 THEN PRINT "Printer has no paper!"; : BEEP: GOTO 994
978 IF ERR = 1 THEN PRINT "NEXT without FOR in line"; ERL; : GOTO 994
979 IF ERR = 26 THEN PRINT "FOR without NEXT in line"; ERL; : GOTO 994
980 IF ERR = 4 THEN PRINT "Too few DATA statements in the program!"; : GOTO 994
981 IF ERR = 5 THEN PRINT "Illegal function call in line"; ERL; : GOTO 994
982 IF ERR = 11 THEN PRINT "Division by 0 in line"; ERL; : GOTO 994
983 IF ERR = 8 THEN PRINT "Undefined line number in line"; ERL: GOTO 994
984 IF ERR = 52 THEN PRINT "Invalid file number!"; : IN = -1: BEEP: GOTO 994 
985 IF ((ERR> = 53) AND (ERR <= 55)) OR (ERR = 62) OR (ERR = 67) OR (ERR> = 70) THEN IN = -1: PRINT "Error when accessing diskette in line" ; ERL; : GOTO 994
986 IF ERR = 61 THEN IN = -1: PRINT "Disk is full!"; : GOTO 994
987 IF (ERR = 250) THEN IN = -1: PRINT "File name is missing!"; : BEEP: GOTO 994
990 IF ERR <> 2 THEN 993
991 GOSUB 951: PRINT "BASIC error message: syntax error in line"; ERL; : LOCATE OVE%, OHO%
992 ON ERROR GOTO 0: RESUME
993 PRINT "General error"; ERR; "in line"; ERL; "More details in the manual!"; 
994 O$ = INPUT $(1): LOCATE 25, 1: PRINT  SPC(OHT% - 1);
995 LOCATE OVE%, OHO%: RESUME NEXT
996 REM ---------  Ende des Bascoders  -----------
1000 A=100:GOTO 20:REM FUNCTION  PROPERTIES
1010 GOSUB 100:PRINT :PRINT "FUNCTION  PROPERTIES"
1100 PRINT :PRINT "1) INTEGRATION"
1110 PRINT :PRINT "2) DIFFERENTIATION "
1120 PRINT :PRINT "3) ZERO POINT"
1130 PRINT :PRINT "4) ARC LENGTH"
1140 PRINT :PRINT "5) INSTRUCTIONS"
1150 PRINT :PRINT "6) END"
1160 PRINT :PRINT 
1170 PRINT "Your choice"; : GOSUB 210:LET K = VAL(IN$)
1180 IF (K<1) OR (K>6) THEN 1010
1190 ON K GOSUB 2000,3000,4000,5000,6000,1999
1200 PRINT :PRINT "PRESS A KEY";:GOSUB 210:GOTO 1010
1500 REM   Y=F(X) ******
1510 LET Y=SIN(X)+X*X
1520 REM   *************
1530 RETURN
1999 END
2000 REM   INTEGRATION 
2005 REM   (SIMPSON )
2010 GOSUB 100:PRINT :PRINT "INTEGRATION "
2020 PRINT :PRINT "Lower limit";:INPUT X1:PRINT "Upper limit";
2030 INPUT X2:IF X1>X2 THEN 2020
2040 PRINT :PRINT "Number of decimals ";
2050 INPUT E:E=10^-(INT(E+.5))
2100 PRINT :PRINT "   STEP   INTEGRAL":PRINT 
2110 H=X2-X1:X=X1:GOSUB 1500:T1=Y
2120 X=X2:GOSUB 1500:T1=(T1+Y)*H/2
2130 X=X1+H/2:GOSUB 1500:M1=Y*H
2140 H=H/2:A=2:T2=(T1+M1)/2:M2=0
2150 FOR I=.5 TO 2:X=I*H+X1:GOSUB 1500
2160 M2=M2+Y*H:NEXTI:S1=T2
2200 H=H/2:A=A*2:T3=(T2+M2)/2:M3=0
2210 FOR J=.5 TO A:X=J*H+X1:GOSUB 1500
2220 M3=M3+Y*H:NEXTJ
2230 S2=(T1+2*M1)/3:GOSUB 2500:T1=T2:T2=T3:M1=M2:M2=M3
2240 S0=S1:S1=S2:IF ABS(S1-S0)>3*E THEN 2200
2300 REM SLOT INT.
2310 H=H/2:S2=(T1+2*M1)/3:GOSUB 2500
2320 PRINT :PRINT "The integral from ":PRINT X1;" to ";X2
2330 PRINT "is ";:GOSUB 2530
2340 RETURN
2500 REM   PRINT  TABLE
2510 SR=INT(2*H*1E5+.5)/1E5
2520 CN=5:CT=9:GOSUB 310:PRINT SR$;" ";
2530 SR=INT(S2/E+.5)*E
2540 CN=INT(LOG(1/E)/LOG(10)+.5)
2550 CT=INT(7+CN/2):GOSUB 310:PRINT SR$
2560 RETURN
3000 REM  DIF FERENTIATION 
3010 GOSUB 100:PRINT :PRINT "DERIVATIVE"
3020 PRINT :PRINT "For which X ";:INPUT X1
3030 PRINT :PRINT "Number of decimals ";
3040 INPUT E:E=10^-(INT(E+.5))
3100 PRINT :PRINT "   STEP     DIF FER.   ":PRINT 
3110 S=.1:I=0
3200 X=X1-S:GOSUB 1500:Y1=Y:X=X1+S:GOSUB 1500:Y2=Y:IV=I
3210 I=(Y2-Y1)/(S*2)
3220 H=S:S2=I:GOSUB 2500:S=S/2
3230 IF ABS(IV-I)>E THEN 3200
3300 PRINT :PRINT "The derivative in"
3310 PRINT X1;" is ";:GOSUB 2530
3320 RETURN
4000 REM ZERO POINT
4010 REM REGULA FALSI
4020 GOSUB 100:PRINT :PRINT "ZERO POINT":PRINT 
4030 PRINT "Lower limit";:INPUT X1:PRINT "Upper limit";
4040 INPUT X2
4050 X=X1:GOSUB 1500:Y1=Y:X=X2:GOSUB 1500:Y2=Y
4060 IF (Y1>0) AND (Y2>0) THEN PRINT "Error":GOTO 4030
4070 IF (Y1<0) AND (Y2<0) THEN PRINT "Error":GOTO 4030
4080 PRINT :PRINT "Number of decimals ";
4090 INPUT E:E=10^-(INT(E+.5))
4100 PRINT :PRINT "   STEP        ZERO POINT":PRINT 
4110 X=X1:GOSUB 1500:Z=SGN(Y)
4120 X4=(X1+X2)/2
4200 X=X1:GOSUB 1500:Y1=Y:X=X2:GOSUB 1500:Y2=Y
4210 X3=(X1*Y2-X2*Y1)/(Y2-Y1)
4220 H=(X3-X4)/2:S2=X3:GOSUB 2500
4230 X=X3:GOSUB 1500
4240 IF Y*Z<0 THEN X2=X3:GOTO 4260
4250 X1=X3
4260 IF ABS(X3-X4)>E THEN X4=X3:GOTO 4200
4300 H=(X3-X4)/2:S2=X3:GOSUB 2500
4310 PRINT :PRINT "The zero point is":GOSUB 2530:RETURN
5000 REM   ARC LENGTH
5010 REM   TRAPEZIUM
5020 GOSUB 100:PRINT :PRINT "ARC LENGTH":PRINT 
5030 PRINT "Lower limit";:INPUT X1:PRINT "Upper limit";
5040 INPUT X2:IF X1>X2 THEN 5030
5050 PRINT :PRINT "Number of decimals ";
5060 INPUT E:E=10^-(INT(E+.5))
5100 PRINT :PRINT "   STEP      ARC":PRINT 
5110 H=X2-X1:L=0
5200 LET L1=L:LET L=0
5205 FOR I=X1 TO X2-H STEP H:X=I
5210    GOSUB 1500:YA=Y:X=I+H:GOSUB 1500:YB=Y
5220    LET L=L+SQR(H^2+(YB-YA)^2)
5225 NEXT I
5230 H=H/2:S2=L:GOSUB 2500
5240 IF ABS(L-L1)>E THEN 5200
5250 REM 
5300 PRINT :PRINT "The arc length"
5310 PRINT "from ";X1;" to ";X2
5320 PRINT "is ";:GOSUB 2530:
5330 RETURN
6000 REM EXPLANATION 
6010 GOSUB 100:PRINT :PRINT "FUNCTION  PROPERTIES"
6020 PRINT :PRINT :PRINT "INSTRUCTIONS"
6030 PRINT "This program calculates":PRINT "some properties"
6040 PRINT "of a given function.":PRINT 
6050 PRINT "In this case, the function":PRINT "is stored";
6060 PRINT "in line 1510."
6070 PRINT :PRINT "Line 1510 Y=SIN(X)+X*X"
6080 PRINT :PRINT "You can obviously change"
6090 PRINT "the function to suit your needs."
6100 RETURN
30000 REM
30010 REM  FUNCTION  ANALYSER
30020 REM  
30030 REM  H.VAN DEELEN
30040 REM  
30050 REM  RUDOLPHLN.30
30060 REM  
30070 REM  DE GLIND GLD
30080 REM  
30090 REM  THE NETHERLANDS
30100 REM  
30110 REM  WRITTEN ON A VIC 20
30120 REM 
30130 REM  TRANSLATED FOR 
30135 REM  RADIO NETHERLANDS
30140 REM  BY JON ATHAN MARKS
